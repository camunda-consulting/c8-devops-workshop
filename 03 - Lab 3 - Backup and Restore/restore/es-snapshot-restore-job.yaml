apiVersion: batch/v1
kind: Job
metadata:
  name: camunda-es-snapshot-restore-job
  labels:
    type: camunda-backup-restore
spec:
  template:
    spec:
      containers:
      - name: es-snapshot-restore
        image: curlimages/curl
        envFrom:
        - configMapRef:
            name: camunda-script-config
        command: ["/bin/sh"]
        args:
        - -c
        - |
          #!/bin/sh
          set -eo pipefail
          
          # Loop over each repository
          for repository in $SNAPSHOT_REPOSITORIES; do
            echo "Processing repository: $repository"
            
            # Query Elasticsearch for all snapshots in the repository
            response=$(curl --fail -s "$ELASTIC_ENDPOINT/_snapshot/$repository/_all")

            # Attempt to extract snapshot names that include the BACKUP_ID. This uses a simplistic method with grep and cut.
            # Note: This method relies on the snapshot names being in a specific format in the response.
            echo "$response" | grep -o "\"snapshot\":\"[^\"]*$BACKUP_ID[^\"]*\"" | cut -d':' -f2 | tr -d '"' | while read -r snapshot; do
              if [ -n "$snapshot" ]; then
                echo "Found snapshot matching criteria: $snapshot in $repository"
                # Restore the found snapshot
                echo "Restoring snapshot: $snapshot in repository: $repository"
                curl --fail --request POST "$ELASTIC_ENDPOINT/_snapshot/$repository/$snapshot/_restore?wait_for_completion=true"
                echo "Restore completed for snapshot: $snapshot in repository: $repository"
              else
                echo "ERROR: No matching snapshots found in repository $repository." >&2
                exit 1
              fi
            done
          done
          
          echo "Restore operations for all repositories completed."
      restartPolicy: OnFailure